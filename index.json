[{"date":"1643939257","url":"https://hedho.github.io/hugo_wiki/posts/2022-02-04-how-to-install-kissmo-paste/","title":"How to Install Kissmo Paste","summary":"Go to the desired directory with commands as follow:\ncd /var/www/websiteyouwant - This can be any location you put you\u0026rsquo;re web.\nwget https://gitlab.com/hedho/KISSmo/-/archive/main/KISSmo-main.zip\nThen unzip:\nunzip KISSmo-main.zip\nEdit index.php:\nReplace line 7 where you will find:\n$ncsite=\u0026ldquo;paste.oddprotocol.org 7777\u0026rdquo;;\nEdit it to:\n$ncsite=\u0026ldquo;yourweb.tld 7777\u0026rdquo;;\nReplace line 60 where you will find:\n$sitename = \u0026ldquo;https://paste.oddprotocol.org/p\u0026quot;;\nEdit it to:\n$sitename = \u0026ldquo;https://youreweb.tld/p\u0026quot;;\nIf you\u0026rsquo;re using OpenHTTPD you will need to add this to /etc/httpd.","content":"Go to the desired directory with commands as follow:\ncd /var/www/websiteyouwant - This can be any location you put you\u0026rsquo;re web.\nwget https://gitlab.com/hedho/KISSmo/-/archive/main/KISSmo-main.zip\nThen unzip:\nunzip KISSmo-main.zip\nEdit index.php:\nReplace line 7 where you will find:\n$ncsite=\u0026ldquo;paste.oddprotocol.org 7777\u0026rdquo;;\nEdit it to:\n$ncsite=\u0026ldquo;yourweb.tld 7777\u0026rdquo;;\nReplace line 60 where you will find:\n$sitename = \u0026ldquo;https://paste.oddprotocol.org/p\u0026quot;;\nEdit it to:\n$sitename = \u0026ldquo;https://youreweb.tld/p\u0026quot;;\nIf you\u0026rsquo;re using OpenHTTPD you will need to add this to /etc/httpd.conf:\nUnder you\u0026rsquo;re specific site that you\u0026rsquo;re looking to run KISSmo add this:\nlocation \u0026quot;/test/p/*\u0026quot; { directory { auto index, index \u0026quot;index.txt\u0026quot; } }  If you\u0026rsquo;re using Nginx you will need to add this to /etc/nginx.conf or if you\u0026rsquo;re running specific nginx conf for a specific site you know where it is:\nlocation /p/ { alias /home/admin/web/paste.oddprotocol.org/public_html/p/; index index.txt; autoindex on; } Running KISSmo actually:\nhttps://paste.oddprotocol.org\nAbout KISSmo: https://paste.oddprotocol.org/about.html\n","tags":["KISSmo"],"section":"posts"},{"date":"1643939024","url":"https://hedho.github.io/hugo_wiki/posts/2022-02-04-how-to-setup-nginx-phpfpm/","title":"How to Setup Nginx Phpfpm","summary":"Install PHP7.4\nBy default, Debian ships with PHP 7.4 in its upstream repositories. You can install it easily by just running the following command:\napt-get install php7.4 -y  Once the PHP is installed, verify the installed version with the following command:\nphp --version  You should get the following output:\nPHP 7.4.3 (cli) (built: Oct 6 2020 15:47:56) ( NTS ) Copyright (c) The PHP Group Zend Engine v3.4.0, Copyright (c) Zend Technologies","content":"Install PHP7.4\nBy default, Debian ships with PHP 7.4 in its upstream repositories. You can install it easily by just running the following command:\napt-get install php7.4 -y  Once the PHP is installed, verify the installed version with the following command:\nphp --version  You should get the following output:\nPHP 7.4.3 (cli) (built: Oct 6 2020 15:47:56) ( NTS ) Copyright (c) The PHP Group Zend Engine v3.4.0, Copyright (c) Zend Technologies\nwith Zend OPcache v7.4.3, Copyright (c), by Zend Technologies  PHP configurations related to Nginx is stored in /etc/php/7.4/fpm/php.ini file. You can modify it for better performance. Install PHP7.4-FPM and Other Extensions\nNginx does not contain native PHP processing. So you will need to install PHP-FPM for processing the PHP files. FPM is an alternative PHP FastCGI implementation with some additional features useful for heavy-loaded sites.\nYou can install PHP7.4-FPM with other necessary extensions by running the following command:\napt-get install php7.4-fpm php7.4-cli php7.4-mysql php7.4-curl php7.4-json -y  Once all the packages are installed, start the PHP7.4-FPM service and enable it to start at system reboot:\nsystemctl start php7.4-fpm systemctl enable php7.4-fpm  Configure Nginx to Process PHP Files\nNext, you will need to configure Nginx to process PHP files.\nTo do so, create a new Nginx virtual host configuration file with the following command:\nnano /etc/nginx/sites-available/example  Add the following lines:\nserver { listen 80; server_name test.example.com; root /var/www/html; index info.php; location ~ \\.php$ { include snippets/fastcgi-php.conf; fastcgi_pass unix:/run/php/php7.4-fpm.sock; } }  Save and close the file then enable the Nginx virtual host configuration file with the following command:\nln -s /etc/nginx/sites-available/example /etc/nginx/sites-enabled/  Next, verify the Nginx for any syntax error with the following command:\nnginx -t  You should get the following output:\n nginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful\n Finally, restart the Nginx service to apply the configuration changes:\nsystemctl restart nginx  Next, create a info.php file to verify the PHP version:\nnano /var/www/html/info.php  Add the following code:\n\u0026lt;?php phpinfo(); ?\u0026gt;Save and close the file when you are finished. Verify PHP\nAt this point, Nginx is configured to process PHP files. Its time to test it.\n","tags":["Linux","Debian"],"section":"posts"},{"date":"1643938902","url":"https://hedho.github.io/hugo_wiki/posts/2022-02-04-how-to-setup-nginx-on-debian/","title":"How to Setup Nginx on Debian","summary":"How to setup Nginx on Debian\nFirst of all you would need to \u0026ldquo;ssh\u0026rdquo; to you\u0026rsquo;re server:\nssh user@127.0.0.1  After successfully loged in on you\u0026rsquo;re server:\nsudo apt install nginx  Start Nginx:\nsudo systemctl start nginx  Enable to start at reboot:\nsudo systemctl enable nginx  Check Nginx status:\nsystemctl status nginx   Output should be similar to:\n init@init ~ % systemctl status nginx ● nginx.","content":"How to setup Nginx on Debian\nFirst of all you would need to \u0026ldquo;ssh\u0026rdquo; to you\u0026rsquo;re server:\nssh user@127.0.0.1  After successfully loged in on you\u0026rsquo;re server:\nsudo apt install nginx  Start Nginx:\nsudo systemctl start nginx  Enable to start at reboot:\nsudo systemctl enable nginx  Check Nginx status:\nsystemctl status nginx   Output should be similar to:\n init@init ~ % systemctl status nginx ● nginx.service - A high performance web server and a reverse proxy server Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset:\u0026gt; Active: active (running) since Fri 2021-10-29 14:02:24 CEST; 1min 22s ago Docs: man:nginx(8) Process: 3813 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_proce\u0026gt; Process: 3815 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (c\u0026gt; Main PID: 3816 (nginx) Tasks: 3 (limit: 2201) Memory: 6.2M CPU: 49ms CGroup: /system.slice/nginx.service ├─3816 \u0026quot;nginx: master process /usr/sbin/nginx -g daemon on; master\u0026gt; ├─3817 \u0026quot;nginx: worker process\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot;\u0026gt; └─3818 \u0026quot;nginx: worker process\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot; \u0026quot;\u0026quot;\u0026gt; init@init ~ %  You\u0026rsquo;re default web root path is:\ncd /var/www/html/  ls\nOutput:\ninit@init /var/www/html % ls index.nginx-debian.html init@init /var/www/html %  Curl you\u0026rsquo;re server IP address should give you the output of \u0026ldquo;Welcome to nginx.\u0026rdquo;\ncurl 127.0.0.1  Output \u0026gt;\ninit@init /var/www/html % curl 127.0.0.1 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Welcome to nginx!\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Welcome to nginx!\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;If you see this page, the nginx web server is successfully installed and working. Further configuration is required.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;For online documentation and support please refer to \u0026lt;a href=\u0026quot;[http://nginx.org/](http://nginx.org/)\u0026quot;\u0026gt;nginx.org\u0026lt;/a\u0026gt;.\u0026lt;br/\u0026gt; Commercial support is available at \u0026lt;a href=\u0026quot;[http://nginx.com/](http://nginx.com/)\u0026quot;\u0026gt;nginx.com\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;\u0026lt;em\u0026gt;Thank you for using nginx.\u0026lt;/em\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; init@init /var/www/html %  Edit or setup specific domain names on Nginx:\ncd /etc/nginx/sites-enabled/  Copy the default\ncp default example.domain  You will find there a helpful documentacion how to do that as example:\nvim example.domain\nserver { listen 80; listen [::]:80; server_name example.domain; root /var/www/example.domain; index index.html; location / { try_files $uri $uri/ =404; } } ","tags":["Linux","Debian"],"section":"posts"},{"date":"1643935600","url":"https://hedho.github.io/hugo_wiki/posts/2022-02-04-how-to-install-and-setup-xfce-+-slim-login-manager-and-extras-on-openbsd/","title":"How to Install and Setup XFCE + Slim Login Manager and Extras on OpenBSD","summary":"This is a step by step how-to Install XFCE on OpenBSD and setup it.\nSo we start by applying thise commands at terminal:\nusermod -G wheel user usermod -G operator user usermod -G staff user After you put the permissions at the user you want to use follow this:\npkg_add nano nano /etc/doas.conf permit persist keepenv user Start installing xfce packages and necessary packages needed for XFCE:\npkg_add xfce consolekit2 pkg_add slim dbus avahi Add thise lines at /root/.","content":"This is a step by step how-to Install XFCE on OpenBSD and setup it.\nSo we start by applying thise commands at terminal:\nusermod -G wheel user usermod -G operator user usermod -G staff user After you put the permissions at the user you want to use follow this:\npkg_add nano nano /etc/doas.conf permit persist keepenv user Start installing xfce packages and necessary packages needed for XFCE:\npkg_add xfce consolekit2 pkg_add slim dbus avahi Add thise lines at /root/.xinitrc and at the specific user you want to use:\nnano /root/.xinitrc \u0026quot;exec ck-launch-session startxfce4\u0026quot; nano /home/user/.xinitrc \u0026quot;exec ck-launch-session startxfce4\u0026quot; Add slim to rc.local for autostart after boot:\nnano /etc/rc.local \u0026quot;/usr/local/bin/slim -d\u0026quot; Enable other services needed for xfce via rcctl:\nrcctl enable messagebus rcctl enable avahi_daemon rcctl disable xenodm And in the end restart:\nreboot Have a great time at the end :) enjoying:\n   ","tags":["OpenBSD","XFCE"],"section":"posts"},{"date":"1643934078","url":"https://hedho.github.io/hugo_wiki/posts/2022-02-04-how-to-setup-weechat-relay-on-openbsd/","title":"How to Setup Weechat Relay on Openbsd","summary":"This document is the specification of WeeChat Relay protocol: the protocol used to relay WeeChat data to clients, which are mostly remote interfaces.\nIn this document, relay means WeeChat with relay plugin, which acts as “server” and allows clients to connect. Client mean the program you used to connect to your relay.\nTo use Weechat and Weechat Relay on OpenBSD you would need to follow those steps:\nNote: Start this on tmux then you can detach from it and use it as a relay from glowing bear web interface","content":"This document is the specification of WeeChat Relay protocol: the protocol used to relay WeeChat data to clients, which are mostly remote interfaces.\nIn this document, relay means WeeChat with relay plugin, which acts as “server” and allows clients to connect. Client mean the program you used to connect to your relay.\nTo use Weechat and Weechat Relay on OpenBSD you would need to follow those steps:\nNote: Start this on tmux then you can detach from it and use it as a relay from glowing bear web interface\n$ weechat\nNote: Before you start setup Weechat Relay you will need to disable Listening to Ipv6 for it to work, at the moment it has an issue if Ipv6 is enabled for relay it binds only on Ipv6, it won’t be an issue if you do own an Ipv6.\nFor this after you open weechat you would need to run:\n/set relay.network.ipv6 off\nRelay setup\nOn the server’s instance of weechat:\n/relay add ssl.irc 8001 /secure set relay WHATEVER_PASSWORD /set relay.network.password \u0026quot;${sec.data.relay}\u0026quot; On the server, to generate the ssl certificate using OpenSSL:\nmkdir -p ~/.weechat/ssl cd ~/.weechat/ssl openssl req -nodes -newkey rsa:2048 -keyout relay.pem -x509 -days 365 -out relay.pem Note: you can use acme-client as well\nOn the client’s instance of weechat:\n/server add ircnow irc.ircnow.org /connect ircnow ","tags":["OpenBSD","Weechat"],"section":"posts"}]